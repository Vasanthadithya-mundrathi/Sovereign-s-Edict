{"ast":null,"code":"var _jsxFileName = \"/Users/vasanthadithya/SIH 2025/Sovereign's Edict/frontend/src/components/HeatmapVisualization.js\";\nimport React from 'react';\nimport './HeatmapVisualization.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeatmapVisualization = ({\n  data\n}) => {\n  // Sample data structure for the heatmap\n  const sampleData = [{\n    clause: 'Section 1',\n    arguments: 5,\n    sentiment: 'positive'\n  }, {\n    clause: 'Section 2',\n    arguments: 12,\n    sentiment: 'negative'\n  }, {\n    clause: 'Section 3',\n    arguments: 8,\n    sentiment: 'neutral'\n  }, {\n    clause: 'Section 4',\n    arguments: 15,\n    sentiment: 'negative'\n  }, {\n    clause: 'Section 5',\n    arguments: 3,\n    sentiment: 'positive'\n  }, {\n    clause: 'Section 6',\n    arguments: 7,\n    sentiment: 'neutral'\n  }, {\n    clause: 'Section 7(a)',\n    arguments: 22,\n    sentiment: 'negative'\n  }, {\n    clause: 'Section 7(b)',\n    arguments: 18,\n    sentiment: 'negative'\n  }, {\n    clause: 'Section 8',\n    arguments: 6,\n    sentiment: 'positive'\n  }, {\n    clause: 'Section 9',\n    arguments: 9,\n    sentiment: 'neutral'\n  }, {\n    clause: 'Section 10',\n    arguments: 14,\n    sentiment: 'negative'\n  }];\n\n  // Function to determine color based on sentiment and argument count\n  const getColor = (sentiment, count) => {\n    const intensity = Math.min(count / 25, 1); // Normalize count to 0-1\n\n    switch (sentiment) {\n      case 'positive':\n        return `rgba(46, 204, 113, ${0.3 + intensity * 0.7})`;\n      case 'negative':\n        return `rgba(231, 76, 60, ${0.3 + intensity * 0.7})`;\n      case 'neutral':\n        return `rgba(52, 152, 219, ${0.3 + intensity * 0.7})`;\n      default:\n        return `rgba(189, 195, 199, ${0.3 + intensity * 0.7})`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"heatmap-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Clause-Level Argument Density Heatmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-color positive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-color negative\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Objection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-color neutral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Neutral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-grid\",\n      children: sampleData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmap-cell\",\n        style: {\n          backgroundColor: getColor(item.sentiment, item.arguments),\n          border: '1px solid #ddd'\n        },\n        title: `${item.clause}: ${item.arguments} arguments (${item.sentiment})`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clause-label\",\n            children: item.clause\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"argument-count\",\n            children: item.arguments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-description\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This heatmap shows the density and sentiment of arguments for each policy clause. Red indicates high objection, green indicates strong support, and blue represents neutral feedback.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = HeatmapVisualization;\nexport default HeatmapVisualization;\nvar _c;\n$RefreshReg$(_c, \"HeatmapVisualization\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HeatmapVisualization","data","sampleData","clause","arguments","sentiment","getColor","count","intensity","Math","min","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","style","backgroundColor","border","title","_c","$RefreshReg$"],"sources":["/Users/vasanthadithya/SIH 2025/Sovereign's Edict/frontend/src/components/HeatmapVisualization.js"],"sourcesContent":["import React from 'react';\nimport './HeatmapVisualization.css';\n\nconst HeatmapVisualization = ({ data }) => {\n  // Sample data structure for the heatmap\n  const sampleData = [\n    { clause: 'Section 1', arguments: 5, sentiment: 'positive' },\n    { clause: 'Section 2', arguments: 12, sentiment: 'negative' },\n    { clause: 'Section 3', arguments: 8, sentiment: 'neutral' },\n    { clause: 'Section 4', arguments: 15, sentiment: 'negative' },\n    { clause: 'Section 5', arguments: 3, sentiment: 'positive' },\n    { clause: 'Section 6', arguments: 7, sentiment: 'neutral' },\n    { clause: 'Section 7(a)', arguments: 22, sentiment: 'negative' },\n    { clause: 'Section 7(b)', arguments: 18, sentiment: 'negative' },\n    { clause: 'Section 8', arguments: 6, sentiment: 'positive' },\n    { clause: 'Section 9', arguments: 9, sentiment: 'neutral' },\n    { clause: 'Section 10', arguments: 14, sentiment: 'negative' },\n  ];\n\n  // Function to determine color based on sentiment and argument count\n  const getColor = (sentiment, count) => {\n    const intensity = Math.min(count / 25, 1); // Normalize count to 0-1\n    \n    switch (sentiment) {\n      case 'positive':\n        return `rgba(46, 204, 113, ${0.3 + intensity * 0.7})`;\n      case 'negative':\n        return `rgba(231, 76, 60, ${0.3 + intensity * 0.7})`;\n      case 'neutral':\n        return `rgba(52, 152, 219, ${0.3 + intensity * 0.7})`;\n      default:\n        return `rgba(189, 195, 199, ${0.3 + intensity * 0.7})`;\n    }\n  };\n\n  return (\n    <div className=\"heatmap-container\">\n      <h3>Clause-Level Argument Density Heatmap</h3>\n      <div className=\"heatmap-legend\">\n        <div className=\"legend-item\">\n          <div className=\"legend-color positive\"></div>\n          <span>Support</span>\n        </div>\n        <div className=\"legend-item\">\n          <div className=\"legend-color negative\"></div>\n          <span>Objection</span>\n        </div>\n        <div className=\"legend-item\">\n          <div className=\"legend-color neutral\"></div>\n          <span>Neutral</span>\n        </div>\n      </div>\n      <div className=\"heatmap-grid\">\n        {sampleData.map((item, index) => (\n          <div \n            key={index} \n            className=\"heatmap-cell\"\n            style={{ \n              backgroundColor: getColor(item.sentiment, item.arguments),\n              border: '1px solid #ddd'\n            }}\n            title={`${item.clause}: ${item.arguments} arguments (${item.sentiment})`}\n          >\n            <div className=\"cell-content\">\n              <div className=\"clause-label\">{item.clause}</div>\n              <div className=\"argument-count\">{item.arguments}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"heatmap-description\">\n        <p>This heatmap shows the density and sentiment of arguments for each policy clause. \n        Red indicates high objection, green indicates strong support, and blue represents neutral feedback.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default HeatmapVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}